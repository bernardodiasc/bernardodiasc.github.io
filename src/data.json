{"posts":{"2018-02-27-comments-section":{"index.md":{"file":"/posts/2018-02-27-comments-section/index.md","dir":"/posts/2018-02-27-comments-section","name":"index","base":"index.md","ext":".md","attr":{"title":"Comments section","date":"2018-02-27T00:00:00.000Z","category":"This Blog","tags":["disqus","react"],"excerpt":"New feature included, opening channel for feedbacks!"},"body":"\nComment section is a cool feature to have. Now you can express yourself and talk to me!\n\nThis is a static file site, so don't have a server running on background to store and controll the data. Instead spend a lot time designing and building my solution for this need, I choose to use [Disqus](http://disqus.com), that I have previous experience using it and it's great.\n\nFor the implementation I decided to use https://github.com/ryanvalentin/disqus-react. The Disqus implementation is quite straight forward, but doing it on React would have some considerations to take care of and I just wanted to skip and rely on something already battle tested.\n\nTaking advance on this post, have you noticed the new styles? Well, I admit that art direction is not my strenght, and so far I didn't invested too many time working to make it pretty. Will continue touching styles to make better. Tell me what you think about the visual, bring it on! What, if something, did you liked? How could be better? :D\n"}},"2018-02-26-boilerplate-generators":{"index.md":{"file":"/posts/2018-02-26-boilerplate-generators/index.md","dir":"/posts/2018-02-26-boilerplate-generators","name":"index","base":"index.md","ext":".md","attr":{"title":"Boilerplate generators","date":"2018-02-26T00:00:00.000Z","category":"This Blog","tags":["node.js","yarn","boilerplate","generators"],"excerpt":"This site have some custom made boilerplate generators that makes life easier."},"body":"\nThere are some repetitive tasks that can cause some laziness to advance fast in the project. Boilerplate generators are something very cool that it's has been around for a while. Many of us already used [Yeoman](http://yeoman.io/) for the scaffolding task. There are also many React boilerplate generators on NPM that works quite well for many purposes.\n\nFor this project I wrote my own script to generate files. Not intended to be a competitor of other options, this was for fun, for exercising Node.js skills.\n\nLet's see what we have already:\n\n- `yarn new:component`\n  - This will prompt the user to pick one of the types: `displays` or `screens`, ask for a name and if it should be nested in some other component of same type. This setup uses the \"display&container\" pattern for React components, I think this is amazing way to develop frontend and will dedicate an entire post explaining that.\n- `yarn new:content`\n  - So far this site only have `posts` content type, and so far it's just a simple markdown (frontmatter) file with some defaul variables.\n\n## About the progress\n\nI'll repeat this a little often, this project is in progress, this is second day I'm working on it and I'll explain what I'm doing on the posts. I hope you enjoy and find it useful... And I hope you give suggestions and feedback as soon as I integrate a comment section üòÇ - [GH Issues](https://github.com/bernardodiasc/bernardodiasc.github.io/issues) is already there if you want to say something now.\n\nAlright, my generator scripts are not optimized, there are a lot redundant code and things that is far from perfect. But hey, it works. That's not ideal I know but I'm already using it for myself and as much as my available time allows me, I'll make it better.\n\nHere, my goal for a near future is to abstract away the generator script into a NPM package [github.com/bernardodiasc/generator](https://github.com/bernardodiasc/generator) (pleae note that this package is still not ready at the time I write this post), I'll even include a boilerplate of this entire framework and more advanced CLI.\n\nIf you want to take a look at the source code of the existing generators, here it goes:\n\n- [src/config/componentGenerator.js](https://github.com/bernardodiasc/bernardodiasc.github.io/blob/develop/src/config/componentGenerator.js)\n- [src/config/contentGenerator.js](https://github.com/bernardodiasc/bernardodiasc.github.io/blob/develop/src/config/contentGenerator.js)\n\nPull requests are welcomed! Cheers!\n"}},"2018-02-26-blog-progress":{"index.md":{"file":"/posts/2018-02-26-blog-progress/index.md","dir":"/posts/2018-02-26-blog-progress","name":"index","base":"index.md","ext":".md","attr":{"title":"Blog progress","date":"2018-02-26T00:00:00.000Z","category":"This Blog","tags":["typography","design","css","markdown"],"excerpt":"Second day developing this project, long road ahead."},"body":"\nHello again!\n\nIf you are checking this blog at the date of this post, you may still be thinking: \"meh...\"\n\nC'mon, take some faith on me! So far I spent 6h building this blog, it's based on some existing boileplated as mentioned in previous post. But I'm not using any open source CMS, I built my own CMS! I want to show you my craft, but this craft takes time, much more time. Let's keep all the fun rolling. ü§ì\n\nI have a roadmap of upgrades that I want to include and they will be made progressively. The cool thing is that the project is already usable, the MVP was put alive on it's first day. Yeah yeah, quite crude, but hey, take a look at the [source code](https://github.com/bernardodiasc/bernardodiasc.github.io), it's pretty awesome already.\n\nFor future efforts, there's a lot of things in my backlog that I want to work in.\n\n## Future features:\n\n- Internationalisation (english and portuguese)\n  - With local storage with redux middleware to persist preferences\n- Comments section\n  - Well, this blog is purely based on static files, so Disqus will help with this\n- Categories routes\n  - Some content belongs together, like this \"blog progress\" series\n- Year, Month and Day routes\n  - Listing of posts with different filters for dates, based on url routes\n- Tags filtering\n  - Differently of category, as post can have many tags, so I'll make a fancy filtering that you can combine multiple tags\n- Good imagery handling\n  - Right now I'm only covering text, but will include images and other medias, because it makes way cooler\n- Share options\n  - Yeah, just some buttons to share on social network, this blog is already SEO-friendly\n- Load content asynchronously\n  - This will make things more interesting, `filestojson` was designed for small project, with little content, but I would expect to take this blog far, I want to include hability to [split output into multiple files](https://github.com/bernardodiasc/filestojson/issues/15) on `filestojson` and load content pieces asynchronously in this blog\n\n## Pending upgrades:\n\n> These are not features... this list is more about technical debts...\n\n- Make a better design\n- Complete documentation instructions and component showcases & tests (see http://bernardodiasc.github.io/docs)\n- Write more posts about technical details of this blog's development\n- Fix date format\n- Include meta information on posts\n"}},"2018-02-23-hello-world":{"card.png":{"file":"/posts/2018-02-23-hello-world/card.png","dir":"/posts/2018-02-23-hello-world","name":"card","base":"card.png","ext":".png","width":290,"height":335},"index.md":{"file":"/posts/2018-02-23-hello-world/index.md","dir":"/posts/2018-02-23-hello-world","name":"index","base":"index.md","ext":".md","attr":{"title":"Hello World","date":"2018-02-23T00:00:00.000Z","category":"This Blog","tags":["static files","react","redux","boilerplate","github pages","yarn","webpack","filestojson","markdown","frontmatter"],"excerpt":"Hi there, in this post I explain briefly how this website was made."},"body":"\nHello there! Welcome to my personal (and professional) website.\n\n\"What this site have of special\", you might wonder... üôã\n\nFirstly, well, it's my website, yey! üòÉ\n\nIt's cooler than that, I'll try to keep a good content for you to read, but the starting point here another. I'm a web developer, specialized on front end development. Yeah, I do the code that return as your experience. At the moment of I'm writting this, the project is on it's early stage and I wanted to keep the visual as simple as possible. The visual will be improved progressively, right now it's under the hood that matters.\n\nAlright let's see what's the big deal here:\n\n- It's open source [github.com/bernardodiasc/bernardodiasc.github.io](https://github.com/bernardodiasc/bernardodiasc.github.io)\n- The content is based on static files [github.com/bernardodiasc/filestojson](https://github.com/bernardodiasc/filestojson)\n- The framework is quite powerful [bernardodiasc.github.io/docs](https://bernardodiasc.github.io/docs/)\n\nBeing a front end developer, there's a lot to do for a project to make it awesome. Starting with the fact that a framework is the whole set of tools and techniques the involves the project and it's super fun to learn how to do a framework. Well, yeah, I could use something that's ready in the community, and I did used many different options for different cases, I had experience with all the major CMSes around that, and many frameworks of a variety of kinds, but right here, I made my own framework, because It's cool, because it's the way I want, because I need to showcase that I know what I'm doing for people to hire me! üòÅ\n\nThe `filestojson` script was made for [x-team.com/legacy](https://x-team.com/legacy/) in it's first version, and at that moment the whole site had html static files generators and npm tasks to build the assets. In the second version I kept the content generator and upgraded the template render to React. Because React is awesome and it makes development experience a breeze.\n\nMost problems I found in the second version was basicaly related to make a single-page application to behave well in a static-file server. Was my first time doing this, I gave a try on Gasby and Next.js, but I wanted to make something simpler, so I kept the Creat-React-App setup and installed [github.com/stereobooster/react-snap](https://github.com/stereobooster/react-snap). Sweet! It worked very well.\n\nFor the workflow I prepared a whole bunch of cool tooling, patterns and procedures. I enjoy working for large scale project, so in this framework I used the entire arsenal recommended for big apps (almost, there's no type system in place). You can see it in the main README of this site or check with even further details in the docs at [bernardodiasc.github.io/docs](https://bernardodiasc.github.io/docs/), but let me briefly mention here:\n\n- Setup: `yarn install`\n- Development: `yarn start`\n- Documentation with Storybook: `yarn docs`\n- Component scaffolding: `yarn new:component`\n- Content scaffolding: `yarn new:content`\n- Content generator: `yarn content`\n- ESLint and StyleLint: `yarn lint`\n- Tests with Jest: `yarn test`\n- Build static files: `yarn build`\n- Static server: `yarn serve`\n- Deploy project: `yarn deploy`\n\nüòÜ\n\nNotice that it's everything simple, type \"yarn something\" and voil√†! The setup is trivial, development workflow is smooth and fast. It provided complete patterns for documentation and showcase of the components using Storybooks, and also includes a component generator that comes with all the boilerplate. Linters and tests suites, yeah, I've got covered that too. Can build and up a local static server to see how it's working. And finally, easy deployment. In the attempt to commit changes, the robot will prevent most as possible the introduction of wrong code or bugs (if properly tested).\n\nFor the CSS I kept pure, using BEM naming pattern. I like Sass, I like even more PostCSS and CSS Modules, and Styled-components. But I choose pure CSS here and I'm happy with.\n\nAll the tooling are here to help, to make the development experience better, reliable, faster.\n\nThanks for reading my blog, I'll do my best to post more about a lot things and evolve this blog's system, and post about that too.\n"},"poster.png":{"file":"/posts/2018-02-23-hello-world/poster.png","dir":"/posts/2018-02-23-hello-world","name":"poster","base":"poster.png","ext":".png","width":1600,"height":988}}}}